Hello - from /Users/moses/.vscode/extensions/jaredly.reason-vscode-1.7.13/bin.native
Previous log location: /var/folders/49/g_mb017x71jghh6sm6x0s8wr0000gn/T/lsp.log
Sending notification {"jsonrpc": "2.0", "method": "client/registerCapability", "params": {"registrations": [{"id": "watching", "method": "workspace/didChangeWatchedFiles", "registerOptions": {"watchers": [{"globPattern": "**/bsconfig.json"}, {"globPattern": "**/.merlin"}]}}]}}
Sending response {"id": 0, "jsonrpc": "2.0", "result": {"capabilities": {"textDocumentSync": 1, "hoverProvider": true, "completionProvider": {"resolveProvider": true, "triggerCharacters": ["."]}, "signatureHelpProvider": {"triggerCharacters": ["("]}, "definitionProvider": true, "typeDefinitionProvider": true, "referencesProvider": true, "documentSymbolProvider": true, "codeActionProvider": true, "executeCommandProvider": {"commands": ["reason-language-server.add_to_interface_inner"]}, "codeLensProvider": {"resolveProvider": true}, "documentHighlightProvider": true, "documentRangeFormattingProvider": true, "documentFormattingProvider": true, "renameProvider": true}}}
Read message 
{"jsonrpc":"2.0","method":"initialized","params":{}}
Read message 
{"jsonrpc":"2.0","method":"workspace/didChangeConfiguration","params":{"settings":{"reason_language_server":{"location":"","build_system_override_by_root":{},"refmt":"","lispRefmt":"","mlfmt":"","format_width":80,"per_value_codelens":false,"dependencies_codelens":true,"opens_codelens":true,"show_module_path_on_hover":true,"reloadOnChange":false,"show_debug_errors":false,"autoRebuild":true}}}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didOpen","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","languageId":"ocaml","version":1,"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex cols -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}}}
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":1,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 1, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":1}}
Read message 
{"jsonrpc":"2.0","id":2,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 2, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":3,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 3, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":4,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 4, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":5,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":3,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.0159740447998ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 5, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":5}}
Read message 
{"jsonrpc":"2.0","id":6,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":104,"character":3}}}
[server] Got a method textDocument/hover
[server] processing took 0.00715255737305ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 6, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":7,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":104,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 7, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":6}}
Read message 
{"jsonrpc":"2.0","id":8,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"range":{"start":{"line":104,"character":3},"end":{"line":104,"character":3}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00810623168945ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 8, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":9,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00905990600586ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 9, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":10,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":104,"character":8}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 10, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":11,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":105,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 11, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":12,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":106,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0119209289551ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 12, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":12}}
Read message 
{"jsonrpc":"2.0","id":13,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":107,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00715255737305ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 13, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":13}}
Read message 
{"jsonrpc":"2.0","id":14,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":108,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00381469726562ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 14, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":14}}
Read message 
{"jsonrpc":"2.0","id":15,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":110,"character":3}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00715255737305ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 15, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":16,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"range":{"start":{"line":110,"character":0},"end":{"line":126,"character":0}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 16, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":17,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":120,"character":11}}}
[server] Got a method textDocument/hover
[server] processing took 0.0138282775879ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 17, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":18,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.0240802764893ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 18, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":19,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":117,"character":90}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 19, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":20,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":112,"character":27}}}
[server] Got a method textDocument/hover
[server] processing took 0.0150203704834ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 20, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":21,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":115,"character":54}}}
[server] Got a method textDocument/hover
[server] processing took 0.0100135803223ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 21, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":22,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":115,"character":54}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 22, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":23,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"range":{"start":{"line":115,"character":54},"end":{"line":115,"character":54}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00786781311035ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 23, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":24,"method":"textDocument/hover","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":55}}}
[server] Got a method textDocument/hover
[server] processing took 0.0109672546387ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 24, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":25,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":54}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 25, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":26,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"range":{"start":{"line":116,"character":55},"end":{"line":116,"character":55}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00691413879395ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 26, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":27,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":56}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 27, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":27}}
Read message 
{"jsonrpc":"2.0","id":28,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":57}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 28, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":28}}
Read message 
{"jsonrpc":"2.0","id":29,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":58}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 29, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":29}}
Read message 
{"jsonrpc":"2.0","id":30,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":59}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0100135803223ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 30, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":30}}
Read message 
{"jsonrpc":"2.0","id":31,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":60}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 31, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":32,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"range":{"start":{"line":116,"character":60},"end":{"line":116,"character":60}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 32, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":33,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":61}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00905990600586ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 33, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":34,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":62}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 34, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":34}}
Read message 
{"jsonrpc":"2.0","id":35,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":63}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 35, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":35}}
Read message 
{"jsonrpc":"2.0","id":36,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":64}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00381469726562ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 36, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":36}}
Read message 
{"jsonrpc":"2.0","id":37,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":65}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 37, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":37}}
Read message 
{"jsonrpc":"2.0","id":38,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":66}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 38, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":38}}
Read message 
{"jsonrpc":"2.0","id":39,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":67}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 39, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":39}}
Read message 
{"jsonrpc":"2.0","id":40,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":68}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00381469726562ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 40, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":40}}
Read message 
{"jsonrpc":"2.0","id":41,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":69}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.0150203704834ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 41, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":42,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"range":{"start":{"line":116,"character":69},"end":{"line":116,"character":69}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 42, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":42}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":2},"contentChanges":[{"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex ols -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}]}}
Read message 
{"jsonrpc":"2.0","id":43,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":69}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 43, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":43}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":3},"contentChanges":[{"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex ls -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}]}}
Read message 
{"jsonrpc":"2.0","id":44,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":69}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00810623168945ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 44, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":44}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":4},"contentChanges":[{"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex s -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}]}}
Read message 
{"jsonrpc":"2.0","id":45,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":69}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 45, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":45}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":5},"contentChanges":[{"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex  -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}]}}
Read message 
{"jsonrpc":"2.0","id":46,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00810623168945ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 46, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":6},"contentChanges":[{"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex v -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}]}}
Read message 
{"jsonrpc":"2.0","id":47,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":70}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00691413879395ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 47, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":48,"method":"textDocument/completion","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":70},"context":{"triggerKind":1}}}
[server] Got a method textDocument/completion
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 48, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":7},"contentChanges":[{"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex va -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}]}}
Read message 
{"jsonrpc":"2.0","id":49,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":71}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 49, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":49}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":8},"contentChanges":[{"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex val -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}]}}
Read message 
{"jsonrpc":"2.0","id":50,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":72}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 50, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":50}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":9},"contentChanges":[{"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex valu -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}]}}
Read message 
{"jsonrpc":"2.0","id":51,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":73}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00715255737305ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 51, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"$/cancelRequest","params":{"id":51}}
Read message 
{"jsonrpc":"2.0","id":52,"method":"textDocument/documentHighlight","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"position":{"line":116,"character":72}}}
[server] Got a method textDocument/documentHighlight
[server] processing took 0.00596046447754ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 52, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":53,"method":"textDocument/codeLens","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"}}}
[server] Got a method textDocument/codeLens
[server] processing took 0.00500679016113ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 53, "jsonrpc": "2.0", "result": [{"range": {"start": {"line": 0, "character": 0}, "end": {"line": 0, "character": 0}}, "command": {"title": "Unable to load compilation data: Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin", "command": ""}}]}
Read message 
{"jsonrpc":"2.0","id":54,"method":"textDocument/codeAction","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"},"range":{"start":{"line":116,"character":72},"end":{"line":116,"character":72}},"context":{"diagnostics":[]}}}
[server] Got a method textDocument/codeAction
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 54, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","id":55,"method":"textDocument/documentSymbol","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"}}}
[server] Got a method textDocument/documentSymbol
[server] processing took 0.00405311584473ms
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending response {"id": 55, "jsonrpc": "2.0", "error": {"code": -32603, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","method":"textDocument/didChange","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":9},"contentChanges":[{"text":"open! Base\n\n(* Arrays are mutable data structures with a fixed size. Like lists, arrays can\n   only contain elements of the same type. Unlike lists, arrays have fast access\n   and modification, so they are often used in the more imperative style of\n   OCaml. *)\n\n(* We can create an array of a given length, initialized with a given value,\n   using [create]:\n\n   {| val create : len:int -> 'a -> 'a array |}\n\n   We can also use the array literal \"[||]\":\n\n   {| let array = [| 1; 2; 3 |] |}\n\n   We can query for the length of an array with [length]:\n\n   {| val length : 'a array -> int |}\n\n   We can access a value at a given index in an array using [get]:\n\n   {| val get : 'a array -> int -> 'a |}\n\n   We can write a value to a given index in an array using [set]:\n\n   {| val set : 'a array -> int -> 'a -> unit |} *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" (Array.get array 1));\n  Array.set array 2 \"hello world\";\n  assert (String.(=) \"hello world\" (Array.get array 2))\n\n(* OCaml also provides some nice syntatic sugar for accessing values and setting\n   the value at [INDEX] in an array [ARRAY]: \n\n   {| ARRAY.(INDEX) |} \n\n   The following code behaves exactly as the previous block of code. *)\nlet () = \n  let array = Array.create ~len:5 \"hello\" in\n  assert (String.(=) \"hello\" array.(1));\n  array.(2) <- \"hello world\";\n  assert (String.(=) \"hello world\" array.(2))\n\n(* We can apply a function [f] to each element of an array using [iter]:\n\n   {| val iter : 'a array -> f:('a -> unit) -> unit |}\n\n   [iteri] works almost the same way, it also gives [f] the index of the element\n   in the array (like [List.mapi] from exercise 12).\n\n   {| val iteri : 'a array -> f:(int -> 'a -> unit) -> unit |}\n\n   Let's implement a function [double] using [Array.iteri], which takes an [int\n   array] and doubles each element of the array in place. *)\nlet double array : unit = Array.iteri array ~f:(fun index num -> array.(index) <- num * 2)\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 1; 1 |] in\n  double array;\n  [%compare.equal: int array]\n    [| 2; 2; 2 |] \n    array\n\nlet%test \"Testing double...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double array;\n  [%compare.equal: int array] \n    [| 2; 4; 6; 8; 10 |] \n    array\n\n(* Write a function that takes an [int array] and a list of indicies and\n   doubles each of the elements at the specified indices. *)\nlet double_selectively array indices : unit =\n  List.iter\n    indices\n    ~f:(fun i ->\n      let value = Array.get array i in\n      array.(i) <- value * 2 )\n\n\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 1; 1 |] in\n  (double_selectively array [ 1 ]);\n  [%compare.equal: int array] \n    [| 1; 2; 1 |]\n    array\n\nlet%test \"Testing double_selectively...\" = \n  let array = [| 1; 2; 3; 4; 5 |] in\n  double_selectively array [ 0; 2; 4];\n  [%compare.equal: int array] \n    [| 2; 2; 6; 4; 10 |] \n    array\n\n(* Two-dimensional arrays are common enough in code that OCaml provides special\n   functions just for constructing them!\n\n   {| val make_matrix : dimx:int -> dimy:int -> 'a -> 'a array array |}\n\n   We can access and set values in a two-dimensional array just as we do a\n   one-dimensional array. *)\nlet () = \n  let matrix = Array.make_matrix ~dimx:5 ~dimy:3 \"hello\" in\n  assert (String.(=) \"hello\" matrix.(1).(2));\n  matrix.(4).(1) <- \"hello world\";\n  assert (String.(=) \"hello world\" matrix.(4).(1))\n\n(* Write a function that takes an [int array array] and doubles each of the\n   elements at the specified indices. *)\nlet double_matrix matrix : unit = Array.iteri\n                                    matrix\n                                    ~f:(fun rowIndex rows -> Array.iteri\n                                                    rows\n                                                    ~f:(fun colIndex valu -> let value = Array.get cols colIndex in\n                                                                          cols.(colIndex) <- value * 2 ))\n\n\nlet%test \"Testing double_matrix...\" = \n  let matrix = [| [| 1; 2; 3 |]; [| 1; 1; 1 |] |] in\n  (double_matrix matrix);\n  [%compare.equal: int array array] \n    [| [| 2; 4; 6 |]; [| 2; 2; 2 |] |] \n    matrix\n"}]}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didSave","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml","version":9}}}
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Sending notification {"jsonrpc": "2.0", "method": "window/showMessage", "params": {"type": 1, "message": "Unable to read /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/.merlin"}}
Read message 
{"jsonrpc":"2.0","method":"textDocument/didClose","params":{"textDocument":{"uri":"file:///Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays/problem.ml"}}}
Found a `dune` file at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
]] Making a new jbuilder package at /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises/13-arrays
=== Project root: /Users/moses/Code/tutorials/learn-ocaml-workshop/02-exercises
Detected `opam` dependency manager for local use
Read message 
{"jsonrpc":"2.0","id":56,"method":"shutdown","params":null}
Sending response {"id": 56, "jsonrpc": "2.0", "result": null}
Read message 
{"jsonrpc":"2.0","method":"exit","params":null}
Got exit! Terminating loop
Finished
